#include<stdio.h>
#include<time.h>
#include<stdlib.h>
clock_t start, stop;
double duration=0;
void select_sort(int a[], int n);


#define NAX_SIZE 20
int main()
{
	int i;
	int data[NAX_SIZE];
	srand(time(NULL));
	for (int h = 0; h < 100; h ++ ) {
		for (i = 0; i < NAX_SIZE; i++)
		{
			data[i] = rand();
		}
		start = clock();
		select_sort(data, NAX_SIZE);
		stop = clock();
		duration = duration + ((double)(stop - start)) / CLK_TCK;
		
	}
	printf("%f", duration);
}
void  select_sort(int a[], int n)        //传入数组的要排序的元素个数

{
	int i, j, min, t;

	for (i = 0; i < n - 1; i++)

	{
		min = i;      //min:当前最小值下标

		for (j = i + 1; j < n; j++)        //扫描余下的部分

			if (a[min] > a[j])        //若有其它元素更小，就记录其下标

				min = j;

		if (min != i)        //保若最小值不在排序区首位，就换到首位

		{
			t = a[min]; a[min] = a[i]; a[i] = t;
		}

	}

}



/*void Shellsort(ElementType A[], int N)
{
	int i, j, Increment;
	ElementType Tmp;
	for (Increment=N/2; Increment>0; Increment/=2)
		for (i = Increment; i < N; i++) {
			Tmp = A[i];
			for (j = i; j >= Increment; j -= Increment)
				if (Tmp < A[j - Increment])
					A[j] = A[j - Increment];
				else
					break;
			A[j] = Tmp;
		}
}*/

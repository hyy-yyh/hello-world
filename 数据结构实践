#include<stdio.h>
#include<time.h>
#include<stdlib.h>
clock_t start, stop;
double duration=0;
void select_sort(int a[], int n);
int shsort(int s[], int n);
#define NAX_SIZE 1000
int main()
{
	int i;
	int data[NAX_SIZE];
	srand(time(NULL));
	for (int h = 0; h < 100; h ++ ) {
		for (i = 0; i < NAX_SIZE; i++)
		{
			data[i] = rand();
		}
		start = clock();
		 shsort(data, NAX_SIZE);
		stop = clock();
		duration = duration + ((double)(stop - start)) / CLK_TCK;

	}

	printf("%f", duration);

}
/*
void  select_sort(int a[], int n)        //传入数组的要排序的元素个数
 
{
	int i, j, min, t;
	for (i = 0; i < n - 1; i++)
	{
		min = i;      //min:当前最小值下标
		for (j = i + 1; j < n; j++)        //扫描余下的部分
			if (a[min] > a[j])        //若有其它元素更小，就记录其下标
				min = j;
		if (min != i)        //保若最小值不在排序区首位，就换到首位
		{
			t = a[min]; a[min] = a[i]; a[i] = t;
		}
	}
}

*/
 


int shsort(int s[], int n)    /* 自定义函数 shsort()*/
{
    int i,j,d;
    d=n/2;    /*确定固定增虽值*/
    while(d>=1)
    {
        for(i=d+1;i<=n;i++)    /*数组下标从d+1开始进行直接插入排序*/
        {
            s[0]=s[i];    /*设置监视哨*/
            j=i-d;    /*确定要进行比较的元素的最右边位置*/
            while((j>0)&&(s[0]<s[j]))
            {
                s[j+d]=s[j];    /*数据右移*/
                j=j-d;    /*向左移d个位置V*/
            }
            s[j + d]=s[0];    /*在确定的位罝插入s[i]*/
        }
        d = d/2;    /*增里变为原来的一半*/
    }
return 0;
}
